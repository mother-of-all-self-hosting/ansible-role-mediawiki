# SPDX-FileCopyrightText: 2023 Slavi Pantaleev
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
- name: Check existence of LLDAP systemd service
  ansible.builtin.stat:
    path: "{{ devture_systemd_docker_base_systemd_path }}/{{ lldap_identifier }}.service"
  register: lldap_service_stat

- name: Uninstall LLDAP systemd services and files
  when: lldap_service_stat.stat.exists | bool
  block:
    - name: Ensure LLDAP systemd service is stopped
      ansible.builtin.service:
        name: "{{ lldap_identifier }}"
        state: stopped
        enabled: false
        daemon_reload: true

    - name: Ensure LLDAP systemd service does not exist
      ansible.builtin.file:
        path: "{{ devture_systemd_docker_base_systemd_path }}/{{ lldap_identifier }}.service"
        state: absent

    - name: Ensure LLDAP support files do not exist
      ansible.builtin.file:
        path: "{{ lldap_base_path }}/{{ item }}"
        state: absent
      with_items:
        - env
        - labels

    - name: Ensure LLDAP image source files path does not exist
      ansible.builtin.file:
        path: "{{ lldap_container_image_self_build_src_files_path }}"
        state: absent

    - name: Ensure LLDAP local data path does not exist if empty
      ansible.builtin.command:
        cmd: "rmdir {{ lldap_data_path }}"
      register: lldap_data_path_deletion_result
      changed_when: lldap_data_path_deletion_result.rc == 0
      failed_when: false

    - name: Ensure LLDAP base path does not exist if empty
      ansible.builtin.command:
        cmd: "rmdir {{ lldap_base_path }}"
      register: lldap_base_path_deletion_result
      changed_when: lldap_base_path_deletion_result.rc == 0
      failed_when: false

    - name: Ensure LLDAP container network does not exist via community.docker.docker_network
      when: devture_systemd_docker_base_container_network_creation_method == 'ansible-module'
      community.docker.docker_network:
        name: "{{ lldap_container_network }}"
        state: absent

    - name: Ensure LLDAP container network does not exist via ansible.builtin.command
      when: devture_systemd_docker_base_container_network_creation_method == 'command'
      ansible.builtin.command:
        cmd: >-
          {{ devture_systemd_docker_base_host_command_docker }} network rm
          {{ lldap_container_network }}
      register: network_deletion_result
      changed_when: lldap_container_network in network_deletion_result.stdout

- name: Check existence of LLDAP local data path
  ansible.builtin.stat:
    path: "{{ lldap_data_path }}"
  register: lldap_data_path_stat

# We just want to notify the user. Deleting data is too destructive.
- name: Notify if LLDAP local data remains
  when: lldap_data_path_stat.stat.exists | bool
  ansible.builtin.set_fact:
    devture_playbook_runtime_messages_list: |
      {{
        devture_playbook_runtime_messages_list | default([])
        +
        [
          "Note: As the local LLDAP instance has been removed, some old data remains in `" + lldap_data_path + "`. Feel free to delete it."
        ]
      }}
